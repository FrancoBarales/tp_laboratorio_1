/*
 ============================================================================
 Name        : TP_1.c
 Author      : Franco Barales
 Version     :
 Copyright   : Your copyright notice
 Description : Hello World in C, Ansi-style
 ============================================================================
 */

#include <stdio.h>
#include <stdlib.h>

#define TRUE 1
#define FALSE 0

float ingresarDatos(float * pNumero, char * mensaje, char * mensajeError, float maximo, float minimo, float reintentos);
float calcularDiferencia(float * pDiferencia, float latam, float aerolineas);


int main(void){
	setbuf(stdout, NULL);

	int flag1 = FALSE;
	int flag2 = FALSE;
	int kilometros = 0;
	float precioAerolineas;
	float precioAerolineasDebito;
	float precioAerolineasCredito;
	float precioAerolineasEnBitcoin;
	float precioLatam;
	float precioLatamDebito;
	float precioLatamCredito;
	float precioLatamEnBitcoin;
	float diferencia;
	char opcion;


	do{
		printf("Menu de Opciones\n");
		printf("\n1) Ingresar kilometros");
		printf("\n2) Ingresar Precio de Vuelos");
		printf("\n3) Calcular todos los costos");
		printf("\n4) Informar Resultados");
		printf("\n5) Carga forzada de datos");
		printf("\n6) Salir");
		printf("\n\nElegir opcion: ");
		fflush(stdin);
		scanf("%c", &opcion);

		switch(opcion){
			case '1':
				ingresarDatos(&kilometros, "\nIngresar cantidad de kilometros (100 o mas): ", "Error. Ingresar una cantidad valida de kilometros: ", 10000, 100, 5);
				flag1 = TRUE;
				break;
			case '2':
				ingresarDatos(&precioAerolineas, "\nIngresar precio del pasaje de Aerolineas: (entre $1.000.000 y $20.000)", "Error. Ingresar un precio valido: ", 1000000, 20000, 5);
				ingresarDatos(&precioLatam, "\nIngresar precio del pasaje de Latam: (entre $1.000.000 y $20.000)", "Error. Ingresar un precio valido: ", 1000000, 20000, 5);
				flag2 = TRUE;
				break;
			case '3':
				if(flag1 == TRUE && flag2 == TRUE){
					calcularDiferencia(&diferencia, precioLatam, precioAerolineas);
				}
				else if(flag1 == TRUE && flag2 == FALSE){
					printf("ERROR: Faltan ingresar los precios de los vuelos.");
				}
				else if(flag1 == FALSE && flag2 == TRUE){
					printf("ERROR: Faltan ingresar los kilometros.");
				}
				else{
					printf("ERROR: Faltan ingresar los kilometros y los precios de los vuelos.");
				}
				break;
			case '4':
				printf("Latam:");
				printf("\na) Precio con tarjeta de débito: %.2f", precioLatamDebito);
				printf("\nb) Precio con tarjeta de crédito: %.2f", precioLatamCredito);
				printf("\nc) Precio pagando con bitcoin : %.2f", precioLatamEnBitcoin);
				printf("\nd) Precio unitario: %.2f", precioAerolineas);
				printf("\n\nAerolíneas:");
				printf("\na) Precio con tarjeta de débito: %.2f", precioAerolineasDebito);
				printf("\nb) Precio con tarjeta de crédito: %.2f", precioAerolineasCredito);
				printf("\nc) Precio pagando con bitcoin : %.2f", precioAerolineasEnBitcoin);
				printf("\nd) Precio unitario: %.2f", precioAerolineas);
				printf("\n\nLa diferencia de precio es : %.2f", diferencia);
				system("pause");
				break;
			case '5':

				break;
		}
	}while(opcion != '6');

	return EXIT_SUCCESS;
}

float calcularDiferencia(float * pDiferencia, float latam, float aerolineas){
	int retorno;
	float auxDiferencia;
	retorno = -1;

	auxDiferencia = latam - aerolineas;
	*pDiferencia = auxDiferencia;

	retorno = 0;
	return retorno;
}

float calcularCostos(float * pResultado, float precio, char mensaje){
	int retorno;
	float auxResultado;
	float auxPrecio;
	char auxMensaje;

	retorno = -1;
	auxPrecio = precio;
	auxMensaje = mensaje;

	if(pResultado != NULL){
		if(auxMensaje == "debito"){
			auxResultado = auxPrecio * 0.9;
		}
		else if(auxMensaje == "credito"){
			auxResultado = auxPrecio * 1.25;
		}
		else{
			auxResultado = auxPrecio / 4606954.55;
		}
	}

	*pResultado = auxResultado;

	return retorno;
}


float ingresarDatos(float * pNumero, char * mensaje, char * mensajeError, float maximo, float minimo, float reintentos){
	int auxNumero;
	int retorno;
	retorno = -1;


	if(pNumero != NULL && maximo >= minimo){
		do{
			printf("%s", mensaje);
			scanf("%d", &auxNumero);
			reintentos--;

			if(auxNumero >= minimo && auxNumero <= maximo){
				*pNumero = auxNumero;
				retorno = 0;
				break;
			}
			else{
				printf("%s", mensajeError);
			}
		}while(reintentos > 0);
	}

	return retorno;
}
























